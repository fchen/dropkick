<?xml version="1.0" encoding="utf-8" ?>
<project name="ConfigurationMerger" default="go">
  <!-- Project UppercuT - http://uppercut.googlecode.com -->
  <!-- DO NOT EDIT THIS FILE - This follows a convention to find configurations, apply environment specifics and save them - find out more at http://uppercut.pbwiki.com -->

	<property name="dirs.drop" value="${directory::get-parent-directory(project::get-buildfile-path())}\..\code_drop" overwrite="false" /> 
	<property name="dirs.drop.configurations" value="${dirs.drop}\Configurations" overwrite="false" /> 
	
	<property name="dirs.configurations" value="${directory::get-parent-directory(project::get-buildfile-path())}\..\Configurations" overwrite="false" />
	<property name="dirs.configurations.settings" value="${dirs.configurations}\Settings" overwrite="false" />
	<property name="dirs.configurations.templates" value="${dirs.configurations}\Templates" overwrite="false" />

	<target name="go" depends="build_configurations" description="Configuration Packaging" if="${directory::exists(dirs.configurations)}" />

	<target name="build_configurations" if="${directory::exists(dirs.configurations)}" >
		<foreach item="File" in="${dirs.configurations.settings}" property="settings.filename" if="${directory::exists(dirs.configurations.settings)}">
			<echo message="Settings-Filename: ${path::get-file-name(settings.filename)}"/>
			<echo message="Settings-Environment: ${path::get-file-name-without-extension(settings.filename)}"/>
			
			<include buildfile="${settings.filename}" failonerror="false"  />
			<property name="settings.environment" value="${path::get-file-name-without-extension(settings.filename)}"/>

      <!-- 
        SETTINGS FILE FYI
        If a property in any of the template files is not defined in the first settings file, the build will fail
        If a property is defined in the first settings file and not the second, the build will succeed. It will use the value provided in the first settings file.
        This could be bad, just make sure you define all properties in all settings files.
      -->
			<foreach item="File" in="${dirs.configurations.templates}" property="templates.filename" if="${directory::exists(dirs.configurations.templates)}">
				<echo message="Template filename: ${path::get-file-name(templates.filename)}"/>
				<echo message="Destination filename: ${settings.environment}.${path::get-file-name-without-extension(templates.filename)}"/>	
				
				<copy file="${templates.filename}"  tofile="${dirs.drop.configurations}\${settings.environment}.${path::get-file-name-without-extension(templates.filename)}" overwrite="true">
					<filterchain>
						<expandproperties />
					</filterchain>
				</copy>
				
			</foreach>
		</foreach>
	</target>
</project>