<?xml version="1.0" encoding="utf-8" ?>
<project name="Packager" default="go">
  <!-- Project UppercuT - http://uppercut.googlecode.com -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="dirs.db.project" value="__DATABASE_FOLDER_NAME__" overwrite="false" />
  <property name="dirs.report.project" value="__REPORT_PROJECT_FOLDER__" overwrite="false" />
  
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" overwrite="false" />
  <property name="file.custom.package.build" value="${dirs.current}\..\BuildScripts.Custom\_package.build" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}\..\build_output" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}\..\code_drop" overwrite="false" />
  <property name="dirs.db" value="${dirs.current}\..\${dirs.db.project}" />
  <property name="dirs.report" value="${dirs.current}\..\${dirs.report.project}" />


  <target name="go" depends="cleanup, build_artifacts, app, db, reports, file_server, package_configuration_files, deployment_scripts, custom_tasks" description="Packaging" />

  <target name="cleanup">
    <echo message="Removing and adding ${dirs.drop}."/>
    <delete dir="${dirs.drop}" />
    <mkdir dir="${dirs.drop}" />
  </target>

  <target name="build_artifacts">
    <echo message="Packaging build artifacts (such as test results) to ${dirs.drop}\build_artifacts."/>
    <copy todir="${dirs.drop}\build_artifacts">
      <fileset basedir="${dirs.build}\build_artifacts">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="app">
    <echo message="Packaging application items to ${dirs.drop}\app."/>
    <copy todir="${dirs.drop}\app">
      <fileset basedir="${dirs.build}">
        <exclude name="*${dirs.db.project}\**" />
        <exclude name="*${dirs.report.project}\**" />
        <exclude name="*Test*\**" />
        <exclude name="*_Published*\**" />
        <exclude name="*build_artifacts*\**" />
        <exclude name="*QuickGraph*.dll" />
        <exclude name="*MbUnit*.dll" />
        <exclude name="*Rhino.Mocks.dll" />
        <exclude name="*Refly.dll" />
        <include name="**/*.*" />
      </fileset>
    </copy>

    <echo message="Packaging website to ${dirs.drop}\_PublishedWebSites."/>
    <copy todir="${dirs.drop}\_PublishedWebSites">
      <fileset basedir="${dirs.build}\_PublishedWebSites">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="db">
    <echo message="Packaging database files to ${dirs.drop}\${dirs.db.project}."/>
    <copy todir="${dirs.drop}\${dirs.db.project}">
      <fileset basedir="${dirs.db}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="reports">
    <echo message="Packaging reports to ${dirs.drop}\${dirs.report.project}."/>
    <copy todir="${dirs.drop}\${dirs.report.project}">
      <fileset basedir="${dirs.report}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="file_server">
    <echo message="Packaging file server items to ${dirs.drop}\FileServer."/>
    <copy todir="${dirs.drop}\FileServer">
      <fileset basedir="${dirs.build}\FileServer">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="package_configuration_files">
    <echo message="Packaging configuration files"/>
    <nant buildfile=".\_configurations.build" inheritall="true" />
  </target>

  <target name="deployment_scripts">
    <echo message="Packaging deployment scripts to ${dirs.drop}\DeploymentScripts."/>
    <copy todir="${dirs.drop}\DeploymentScripts">
      <fileset basedir="${dirs.build}\..\DeploymentScripts">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>
  
  <target name="custom_tasks">
    <echo message="Running custom packaging tasks if ${file.custom.package.build} exists." />
    <nant buildfile="${file.custom.package.build}" inheritall="true" if="${file::exists(file.custom.package.build)}" failonerror="false" />
  </target>

</project>